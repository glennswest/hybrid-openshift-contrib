{
  "$schema" : "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion" : "1.0.0.0",
  "parameters" : {
    "vmName" : {
      "type" : "string"
    },
    "dnsName" : {
      "type" : "string"
    },
    "sa" : {
      "type" : "string"
    },
    "subnetRef" : {
      "type" : "string"
    },
    "vmSize" : {
      "type" : "string"
    },
    "adminUsername" : {
      "type" : "string"
    },
    "adminPassword" : {
      "type" : "securestring"
    },
    "sshKeyData" : {
      "type" : "string",
      "metadata" : {
        "description" : "SSH RSA public key file as a string."
      }
    },
    "numberOfNodes" : {
      "type" : "int"
    },
    "baseTemplateUrl" : {
      "type" : "string"
    },
    "routerExtIP" : {
      "type" : "string"
    },
    "imageReference" : {
      "type" : "object",
      "metadata" : {
        "description" : "imageReference object that should be used to create the virtual machine"
      }
    },
    "RHNUserName" : {
      "type" : "string"
    },
    "RHNPassword" : {
      "type" : "securestring"
    },
    "SubscriptionPoolId" : {
      "type" : "string"
    },
    "sshPrivateData" : {
      "type" : "securestring",
      "metadata" : {
        "description" : "SSH RSA private key file as a string."
      }
    },
    "wildcardZone" : {
      "type" : "string"
    },
    "registrystoragename" : {
      "type" : "string"
    },
    "registrykey" : {
      "type" : "string"
    },
    "location" : {
      "type" : "string"
    },
    "subscriptionid" : {
      "type" : "string"
    },
    "tenantid" : {
      "type" : "string"
    },
    "aadclientid" : {
      "type" : "string"
    },
    "aadclientsecret" : {
      "type" : "string"
    },
    "rhsmmode" : {
      "type" : "string"
    },
    "openshiftsdn" : {
      "type" : "string"
    },
    "metrics" : {
      "type" : "bool"
    },
    "logging" : {
      "type" : "bool"
    },
    "opslogging" : {
      "type" : "bool"
    }
  },
  "variables" : {
    "apiVersion" : "2015-06-15",
    "sshKeyPath" : "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "sQuote" : "\""
  },
  "resources" : [
    {
      "apiVersion" : "[variables('apiVersion')]",
      "type" : "Microsoft.Network/networkInterfaces",
      "name" : "[concat(parameters('vmName'), 'nic')]",
      "location" : "[resourceGroup().location]",
      "tags" : {
        "displayName" : "NetworkInterface"
      },
      "dependsOn" : [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(parameters('vmName'), 'pip'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', concat(parameters('vmName'), 'nsg'))]"
      ],
      "properties" : {
        "ipConfigurations" : [
          {
            "name" : "ipconfig1",
            "properties" : {
              "privateIPAllocationMethod" : "Dynamic",
              "publicIPAddress" : {
                "id" : "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmName'), 'pip'))]"
              },
              "subnet" : {
                "id" : "[parameters('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup" : {
          "id" : "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('vmName'), 'nsg'))]"
        }
      }
    },
    {
      "apiVersion" : "[variables('apiVersion')]",
      "type" : "Microsoft.Compute/virtualMachines",
      "name" : "[parameters('vmName')]",
      "location" : "[resourceGroup().location]",
      "tags" : {
        "displayName" : "VirtualMachine"
      },
      "dependsOn" : [
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('vmName'), 'nic'))]"
      ],
      "properties" : {
        "hardwareProfile" : {
          "vmSize" : "[parameters('vmSize')]"
        },
        "osProfile" : {
          "computerName" : "[parameters('vmName')]",
          "adminUsername" : "[parameters('adminUsername')]",
          "linuxConfiguration" : {
            "disablePasswordAuthentication" : "true",
            "ssh" : {
              "publicKeys" : [
                {
                  "path" : "[variables('sshKeyPath')]",
                  "keyData" : "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile" : {
          "imageReference" : "[parameters('imageReference')]",
          "osDisk" : {
            "name" : "osdisk",
            "vhd" : {
              "uri" : "[concat('http://', parameters('sa'), '.blob.core.windows.net/openshiftvmachines/', parameters('vmName'), '.vhd')]"
            },
            "caching" : "ReadWrite",
            "createOption" : "FromImage"
          },
          "dataDisks" : [
            {
              "caching" : "None",
              "createOption" : "Empty",
              "diskSizeGB" : "128",
              "lun" : 0,
              "name" : "datadisk1",
              "vhd" : {
                "uri" : "[concat('http://', parameters('sa'), '.blob.core.windows.net/openshiftvmachines/', parameters('vmName'), '_datadisk1.vhd')]"
              }
            }
          ]
        },
        "networkProfile" : {
          "networkInterfaces" : [
            {
              "id" : "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), 'nic'))]"
            }
          ]
        }
      }
    },
    {
      "type" : "Microsoft.Compute/virtualMachines/extensions",
      "name" : "[concat(parameters('vmName'),'/installcustomscript')]",
      "apiVersion" : "[variables('apiVersion')]",
      "location" : "[resourceGroup().location]",
      "tags" : {
        "displayName" : "VirtualMachineCustomScriptExtension"
      },
      "dependsOn" : [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties" : {
        "publisher" : "Microsoft.Azure.Extensions",
        "type" : "CustomScript",
        "typeHandlerVersion" : "2.0",
        "autoUpgradeMinorVersion" : true,
        "settings" : {
          "fileUris" : [
            "[concat(parameters('baseTemplateUrl'), 'bastion.sh')]"
          ]
        },
        "protectedSettings" : {
          "commandToExecute" : "[ concat('bash bastion.sh ', resourceGroup().name, ' ', parameters('wildcardZone'), ' ',  parameters('adminUsername'), ' ', parameters('adminPassword'), ' ', reference(concat(parameters('vmName'), 'pip')).dnsSettings.fqdn, ' ', padLeft(parameters('numberOfNodes'), 2, '0'), ' ', parameters('routerExtIP'),' ', parameters('RHNUserName'), ' ', parameters('RHNPassword'),' ', parameters('SubscriptionPoolId'), ' ',  variables('sQuote'),  parameters('sshPrivateData'), variables('sQuote'),  ' ', variables('sQuote'), parameters('sshKeyData'), variables('sQuote'),' ',parameters('registrystoragename'),' ',parameters('registrykey'),' ',parameters('location'),' ',parameters('subscriptionid'),' ',parameters('tenantid'),' ',parameters('aadclientid'),' ',parameters('aadclientsecret'),' ',parameters('rhsmmode'),' ',parameters('openshiftsdn'),' ',parameters('metrics'),' ',parameters('logging'),' ',parameters('opslogging'),' ',parameters('baseTemplateUrl'))]"
        }
      }
    },
    {
      "type" : "Microsoft.Network/networkSecurityGroups",
      "name" : "[concat(parameters('vmName'), 'nsg')]",
      "tags" : {
        "displayName" : "NetworkSecurityGroup"
      },
      "apiVersion" : "[variables('apiVersion')]",
      "location" : "[resourceGroup().location]",
      "properties" : {
        "securityRules" : [
          {
            "name" : "default-allow-ssh",
            "properties" : {
              "protocol" : "Tcp",
              "sourcePortRange" : "*",
              "destinationPortRange" : "22",
              "sourceAddressPrefix" : "*",
              "destinationAddressPrefix" : "*",
              "access" : "Allow",
              "priority" : 1000,
              "direction" : "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion" : "[variables('apiVersion')]",
      "type" : "Microsoft.Network/publicIPAddresses",
      "name" : "[concat(parameters('vmName'), 'pip')]",
      "location" : "[resourceGroup().location]",
      "tags" : {
        "displayName" : "PublicIPAddress"
      },
      "properties" : {
        "publicIPAllocationMethod" : "Static",
        "dnsSettings" : {
          "domainNameLabel" : "[parameters('dnsName')]"
        }
      }
    }
  ],
  "outputs" : {
    "fqdn" : {
      "type" : "string",
      "value" : "[reference(concat(parameters('vmName'), 'pip')).dnsSettings.fqdn]"
    },
    "pip" : {
      "type" : "string",
      "value" : "[reference(concat(parameters('vmName'), 'pip')).ipAddress]"
    }
  }
}